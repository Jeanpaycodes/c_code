//越界访问以及栈区数据存放
#include <stdio.h>
int main()
{
    int i = 0;
    int arr[10] = {0};
    for(i=0;i<=12;i++)
    {
        arr[i]=0;
        printf("hehe\n");
    }
    return 0;
}

//程序进入死循环的原因
//1.栈区：局部变量、函数形参、函数调用在此处开辟空间
////堆区：动态内存分配
////静态区：全局变量、静态变量在此处开辟空间
//2.栈区的默认使用：先使用高地址，再使用低地址
//3.数组随着下标的增长 地址由低到高变化
//4.该程序先创建i变量 存放在栈区的高地址 再创建数组 存放的位置比变量i低 当数组越界访问到变量i的位置时，i被覆盖重置
////为0，所以该程序陷入死循环
